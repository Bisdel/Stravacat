{"ast":null,"code":"import { forwardRef } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nclass FormInputComponent {\n  constructor() {\n    this.type = \"text\";\n    this.value = \"\";\n    this.disabled = false;\n    this.onChange = value => {};\n    this.onTouched = () => {};\n  }\n  writeValue(obj) {\n    this.value = obj;\n  }\n  registerOnChange(fn) {\n    this.onChange = fn;\n  }\n  registerOnTouched(fn) {\n    this.onTouched = fn;\n  }\n  setDisabledState(isDisabled) {\n    this.disabled = isDisabled;\n  }\n}\nFormInputComponent.ɵfac = function FormInputComponent_Factory(t) {\n  return new (t || FormInputComponent)();\n};\nFormInputComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: FormInputComponent,\n  selectors: [[\"sost-form-input\"]],\n  inputs: {\n    id: \"id\",\n    label: \"label\",\n    type: \"type\",\n    formControl: \"formControl\",\n    invalidMessage: [\"message-when-not-valid\", \"invalidMessage\"]\n  },\n  features: [i0.ɵɵProvidersFeature([{\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => FormInputComponent),\n    multi: true\n  }])],\n  decls: 7,\n  vars: 9,\n  consts: [[1, \"mb-3\", \"row\"], [1, \"col-sm-2\", \"col-form-label\", 3, \"for\"], [1, \"col-sm-10\"], [1, \"form-control\", 3, \"disabled\", \"type\", \"id\", \"ngModel\", \"ngModelChange\"], [1, \"invalid-feedback\"]],\n  template: function FormInputComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"label\", 1);\n      i0.ɵɵtext(2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"div\", 2)(4, \"input\", 3);\n      i0.ɵɵlistener(\"ngModelChange\", function FormInputComponent_Template_input_ngModelChange_4_listener($event) {\n        return ctx.onChange($event);\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"div\", 4);\n      i0.ɵɵtext(6);\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"for\", ctx.id);\n      i0.ɵɵadvance(1);\n      i0.ɵɵtextInterpolate(ctx.label);\n      i0.ɵɵadvance(2);\n      i0.ɵɵclassProp(\"is-invalid\", ctx.formControl == null ? null : ctx.formControl.invalid);\n      i0.ɵɵproperty(\"disabled\", ctx.disabled)(\"type\", ctx.type)(\"id\", ctx.id)(\"ngModel\", ctx.value);\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate(ctx.invalidMessage);\n    }\n  },\n  dependencies: [i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgModel],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});\nexport { FormInputComponent };","map":{"version":3,"names":["forwardRef","NG_VALUE_ACCESSOR","FormInputComponent","constructor","type","value","disabled","onChange","onTouched","writeValue","obj","registerOnChange","fn","registerOnTouched","setDisabledState","isDisabled","selectors","inputs","id","label","formControl","invalidMessage","features","i0","ɵɵProvidersFeature","provide","useExisting","multi","decls","vars","consts","template","FormInputComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","FormInputComponent_Template_input_ngModelChange_4_listener","$event","ɵɵadvance","ɵɵproperty","ɵɵtextInterpolate","ɵɵclassProp","invalid"],"sources":["C:\\Users\\brico\\Documents\\Sopra\\Java-Projects\\Stravacat Angular\\src\\app\\components\\form-input\\form-input.component.ts","C:\\Users\\brico\\Documents\\Sopra\\Java-Projects\\Stravacat Angular\\src\\app\\components\\form-input\\form-input.component.html"],"sourcesContent":["import { Component, Input, forwardRef } from '@angular/core';\r\nimport { ControlValueAccessor, FormControl, NG_VALUE_ACCESSOR } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'sost-form-input',\r\n  templateUrl: './form-input.component.html',\r\n  styleUrls: ['./form-input.component.css'],\r\n  providers: [\r\n    {\r\n      provide: NG_VALUE_ACCESSOR,\r\n      useExisting: forwardRef(() => FormInputComponent),\r\n      multi: true\r\n    }\r\n  ]\r\n})\r\nexport class FormInputComponent implements ControlValueAccessor {\r\n  @Input() id!: string;\r\n  @Input() label!: string;\r\n  @Input() type: string = \"text\";\r\n  @Input() formControl?: FormControl;\r\n  @Input('message-when-not-valid') invalidMessage!: string;\r\n\r\n  value: string = \"\";\r\n  disabled: boolean = false;\r\n\r\n  onChange = (value: string) => {};\r\n  onTouched = () => {};\r\n\r\n  writeValue(obj: any): void {    \r\n    this.value = obj;\r\n  }\r\n\r\n  registerOnChange(fn: any): void {\r\n    this.onChange = fn;\r\n  }\r\n\r\n  registerOnTouched(fn: any): void {\r\n    this.onTouched = fn;\r\n  }\r\n\r\n  setDisabledState?(isDisabled: boolean): void {\r\n    this.disabled = isDisabled;\r\n  }\r\n}\r\n","<div class=\"mb-3 row\">\r\n  <label [for]=\"id\" class=\"col-sm-2 col-form-label\">{{ label }}</label>\r\n\r\n  <div class=\"col-sm-10\">\r\n    <input class=\"form-control\" [disabled]=\"disabled\" [type]=\"type\" [id]=\"id\" [ngModel]=\"value\" (ngModelChange)=\"onChange($event)\" [class.is-invalid]=\"formControl?.invalid\" />\r\n    <div class=\"invalid-feedback\">{{ invalidMessage }}</div>\r\n  </div>\r\n</div>"],"mappings":"AAAA,SAA2BA,UAAU,QAAQ,eAAe;AAC5D,SAA4CC,iBAAiB,QAAQ,gBAAgB;;;AAErF,MAYaC,kBAAkB;EAZ/BC,YAAA;IAeW,KAAAC,IAAI,GAAW,MAAM;IAI9B,KAAAC,KAAK,GAAW,EAAE;IAClB,KAAAC,QAAQ,GAAY,KAAK;IAEzB,KAAAC,QAAQ,GAAIF,KAAa,IAAI,CAAE,CAAC;IAChC,KAAAG,SAAS,GAAG,MAAK,CAAE,CAAC;;EAEpBC,UAAUA,CAACC,GAAQ;IACjB,IAAI,CAACL,KAAK,GAAGK,GAAG;EAClB;EAEAC,gBAAgBA,CAACC,EAAO;IACtB,IAAI,CAACL,QAAQ,GAAGK,EAAE;EACpB;EAEAC,iBAAiBA,CAACD,EAAO;IACvB,IAAI,CAACJ,SAAS,GAAGI,EAAE;EACrB;EAEAE,gBAAgBA,CAAEC,UAAmB;IACnC,IAAI,CAACT,QAAQ,GAAGS,UAAU;EAC5B;;AA3BWb,kBAAkB,C;mBAAlBA,kBAAkB;AAAA;AAAlBA,kBAAkB,C;QAAlBA,kBAAkB;EAAAc,SAAA;EAAAC,MAAA;IAAAC,EAAA;IAAAC,KAAA;IAAAf,IAAA;IAAAgB,WAAA;IAAAC,cAAA;EAAA;EAAAC,QAAA,GAAAC,EAAA,CAAAC,kBAAA,CARlB,CACT;IACEC,OAAO,EAAExB,iBAAiB;IAC1ByB,WAAW,EAAE1B,UAAU,CAAC,MAAME,kBAAkB,CAAC;IACjDyB,KAAK,EAAE;GACR,CACF;EAAAC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,4BAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCbHV,EAAA,CAAAY,cAAA,aAAsB;MAC8BZ,EAAA,CAAAa,MAAA,GAAW;MAAAb,EAAA,CAAAc,YAAA,EAAQ;MAErEd,EAAA,CAAAY,cAAA,aAAuB;MACuEZ,EAAA,CAAAe,UAAA,2BAAAC,2DAAAC,MAAA;QAAA,OAAiBN,GAAA,CAAA3B,QAAA,CAAAiC,MAAA,CAAgB;MAAA,EAAC;MAA9HjB,EAAA,CAAAc,YAAA,EAA2K;MAC3Kd,EAAA,CAAAY,cAAA,aAA8B;MAAAZ,EAAA,CAAAa,MAAA,GAAoB;MAAAb,EAAA,CAAAc,YAAA,EAAM;;;MAJnDd,EAAA,CAAAkB,SAAA,GAAU;MAAVlB,EAAA,CAAAmB,UAAA,QAAAR,GAAA,CAAAhB,EAAA,CAAU;MAAiCK,EAAA,CAAAkB,SAAA,GAAW;MAAXlB,EAAA,CAAAoB,iBAAA,CAAAT,GAAA,CAAAf,KAAA,CAAW;MAGoEI,EAAA,CAAAkB,SAAA,GAAyC;MAAzClB,EAAA,CAAAqB,WAAA,eAAAV,GAAA,CAAAd,WAAA,kBAAAc,GAAA,CAAAd,WAAA,CAAAyB,OAAA,CAAyC;MAA5ItB,EAAA,CAAAmB,UAAA,aAAAR,GAAA,CAAA5B,QAAA,CAAqB,SAAA4B,GAAA,CAAA9B,IAAA,QAAA8B,GAAA,CAAAhB,EAAA,aAAAgB,GAAA,CAAA7B,KAAA;MACnBkB,EAAA,CAAAkB,SAAA,GAAoB;MAApBlB,EAAA,CAAAoB,iBAAA,CAAAT,GAAA,CAAAb,cAAA,CAAoB;;;;;;SDUzCnB,kBAAkB"},"metadata":{},"sourceType":"module","externalDependencies":[]}