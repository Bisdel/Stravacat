{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/platform-browser\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"src/app/services/authentication.service\";\nimport * as i4 from \"@angular/forms\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"../../components/form-card/form-card.component\";\nimport * as i7 from \"../../components/form-input/form-input.component\";\nfunction LoginComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 4);\n    i0.ɵɵtext(1, \" Nom d'utilisateur ou mot de passe incorrect !\\n\");\n    i0.ɵɵelementEnd();\n  }\n}\nclass LoginComponent {\n  constructor(title, router, srvAuth, formBuilder) {\n    this.router = router;\n    this.srvAuth = srvAuth;\n    this.formBuilder = formBuilder;\n    this.erreur = false;\n    title.setTitle(\"Se connecter\");\n  }\n  ngOnInit() {\n    this.usernameCtrl = this.formBuilder.control('', Validators.required);\n    this.passwordCtrl = this.formBuilder.control('', Validators.required);\n    this.userForm = this.formBuilder.group({\n      username: this.usernameCtrl,\n      password: this.passwordCtrl\n    });\n  }\n  seConnecter() {\n    this.erreur = false;\n    this.srvAuth.login(this.usernameCtrl.value, this.passwordCtrl.value, {\n      next: () => {\n        this.router.navigate(['/accueil']);\n      },\n      error: () => {\n        this.erreur = true;\n      }\n    });\n  }\n}\nLoginComponent.ɵfac = function LoginComponent_Factory(t) {\n  return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.Title), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.AuthenticationService), i0.ɵɵdirectiveInject(i4.FormBuilder));\n};\nLoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: LoginComponent,\n  selectors: [[\"app-login\"]],\n  decls: 6,\n  vars: 4,\n  consts: [[\"class\", \"alert alert-danger\", 4, \"ngIf\"], [\"title\", \"Connexion\", \"ok-label\", \"Se connecter\", 3, \"formGroup\", \"ok\"], [\"id\", \"username\", \"label\", \"Nom d'utilisateur\", \"formControlName\", \"username\", \"message-when-not-valid\", \"Le nom d'utilisateur est obligatoire\", 3, \"formControl\"], [\"type\", \"password\", \"id\", \"password\", \"label\", \"Mot de passe\", \"formControlName\", \"password\", \"message-when-not-valid\", \"Le mot de passe est obligatoire\", 3, \"formControl\"], [1, \"alert\", \"alert-danger\"]],\n  template: function LoginComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h1\");\n      i0.ɵɵtext(1, \"Se connecter\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(2, LoginComponent_div_2_Template, 2, 0, \"div\", 0);\n      i0.ɵɵelementStart(3, \"sost-form-card\", 1);\n      i0.ɵɵlistener(\"ok\", function LoginComponent_Template_sost_form_card_ok_3_listener() {\n        return ctx.seConnecter();\n      });\n      i0.ɵɵelement(4, \"sost-form-input\", 2)(5, \"sost-form-input\", 3);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.erreur);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"formGroup\", ctx.userForm);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"formControl\", ctx.usernameCtrl);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"formControl\", ctx.passwordCtrl);\n    }\n  },\n  dependencies: [i5.NgIf, i4.NgControlStatus, i4.NgControlStatusGroup, i4.FormControlDirective, i4.FormGroupDirective, i4.FormControlName, i6.FormCardComponent, i7.FormInputComponent],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});\nexport { LoginComponent };","map":{"version":3,"names":["Validators","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","LoginComponent","constructor","title","router","srvAuth","formBuilder","erreur","setTitle","ngOnInit","usernameCtrl","control","required","passwordCtrl","userForm","group","username","password","seConnecter","login","value","next","navigate","error","ɵɵdirectiveInject","i1","Title","i2","Router","i3","AuthenticationService","i4","FormBuilder","selectors","decls","vars","consts","template","LoginComponent_Template","rf","ctx","ɵɵtemplate","LoginComponent_div_2_Template","ɵɵlistener","LoginComponent_Template_sost_form_card_ok_3_listener","ɵɵelement","ɵɵadvance","ɵɵproperty"],"sources":["C:\\Users\\brico\\Documents\\Sopra\\Java-Projects\\Stravacat Angular\\src\\app\\views\\login\\login.component.ts","C:\\Users\\brico\\Documents\\Sopra\\Java-Projects\\Stravacat Angular\\src\\app\\views\\login\\login.component.html"],"sourcesContent":["import { Component } from '@angular/core';\r\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { Title } from '@angular/platform-browser';\r\nimport { Router } from '@angular/router';\r\nimport { AuthenticationService } from 'src/app/services/authentication.service';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent {\r\n  erreur: boolean = false;\r\n  userForm!: FormGroup;\r\n  usernameCtrl!: FormControl;\r\n  passwordCtrl!: FormControl;\r\n\r\n  constructor(title: Title, private router: Router, private srvAuth: AuthenticationService, private formBuilder: FormBuilder) {\r\n    title.setTitle(\"Se connecter\");\r\n  }\r\n  \r\n  ngOnInit(): void {\r\n    this.usernameCtrl = this.formBuilder.control('', Validators.required);\r\n    this.passwordCtrl = this.formBuilder.control('', Validators.required);\r\n\r\n    this.userForm = this.formBuilder.group({\r\n      username: this.usernameCtrl,\r\n      password: this.passwordCtrl\r\n    });\r\n  }\r\n\r\n  seConnecter() {\r\n    this.erreur = false;\r\n\r\n    this.srvAuth.login(this.usernameCtrl.value, this.passwordCtrl.value, {\r\n      next: () => {\r\n        this.router.navigate([ '/accueil' ]);\r\n      },\r\n\r\n      error: () => {\r\n        this.erreur = true;\r\n      }\r\n    });\r\n  }\r\n}\r\n","<h1>Se connecter</h1>\r\n\r\n<div *ngIf=\"erreur\" class=\"alert alert-danger\">\r\n  Nom d'utilisateur ou mot de passe incorrect !\r\n</div>\r\n\r\n<sost-form-card [formGroup]=\"userForm\" title=\"Connexion\" ok-label=\"Se connecter\" (ok)=\"seConnecter()\">\r\n  <sost-form-input id=\"username\" label=\"Nom d'utilisateur\" formControlName=\"username\" [formControl]=\"usernameCtrl\" message-when-not-valid=\"Le nom d'utilisateur est obligatoire\" />\r\n  <sost-form-input type=\"password\" id=\"password\" label=\"Mot de passe\" formControlName=\"password\" [formControl]=\"passwordCtrl\" message-when-not-valid=\"Le mot de passe est obligatoire\" />\r\n</sost-form-card>"],"mappings":"AACA,SAA8CA,UAAU,QAAQ,gBAAgB;;;;;;;;;;;ICChFC,EAAA,CAAAC,cAAA,aAA+C;IAC7CD,EAAA,CAAAE,MAAA,uDACF;IAAAF,EAAA,CAAAG,YAAA,EAAM;;;ADEN,MAKaC,cAAc;EAMzBC,YAAYC,KAAY,EAAUC,MAAc,EAAUC,OAA8B,EAAUC,WAAwB;IAAxF,KAAAF,MAAM,GAANA,MAAM;IAAkB,KAAAC,OAAO,GAAPA,OAAO;IAAiC,KAAAC,WAAW,GAAXA,WAAW;IAL7G,KAAAC,MAAM,GAAY,KAAK;IAMrBJ,KAAK,CAACK,QAAQ,CAAC,cAAc,CAAC;EAChC;EAEAC,QAAQA,CAAA;IACN,IAAI,CAACC,YAAY,GAAG,IAAI,CAACJ,WAAW,CAACK,OAAO,CAAC,EAAE,EAAEf,UAAU,CAACgB,QAAQ,CAAC;IACrE,IAAI,CAACC,YAAY,GAAG,IAAI,CAACP,WAAW,CAACK,OAAO,CAAC,EAAE,EAAEf,UAAU,CAACgB,QAAQ,CAAC;IAErE,IAAI,CAACE,QAAQ,GAAG,IAAI,CAACR,WAAW,CAACS,KAAK,CAAC;MACrCC,QAAQ,EAAE,IAAI,CAACN,YAAY;MAC3BO,QAAQ,EAAE,IAAI,CAACJ;KAChB,CAAC;EACJ;EAEAK,WAAWA,CAAA;IACT,IAAI,CAACX,MAAM,GAAG,KAAK;IAEnB,IAAI,CAACF,OAAO,CAACc,KAAK,CAAC,IAAI,CAACT,YAAY,CAACU,KAAK,EAAE,IAAI,CAACP,YAAY,CAACO,KAAK,EAAE;MACnEC,IAAI,EAAEA,CAAA,KAAK;QACT,IAAI,CAACjB,MAAM,CAACkB,QAAQ,CAAC,CAAE,UAAU,CAAE,CAAC;MACtC,CAAC;MAEDC,KAAK,EAAEA,CAAA,KAAK;QACV,IAAI,CAAChB,MAAM,GAAG,IAAI;MACpB;KACD,CAAC;EACJ;;AAhCWN,cAAc,C;mBAAdA,cAAc,EAAAJ,EAAA,CAAA2B,iBAAA,CAAAC,EAAA,CAAAC,KAAA,GAAA7B,EAAA,CAAA2B,iBAAA,CAAAG,EAAA,CAAAC,MAAA,GAAA/B,EAAA,CAAA2B,iBAAA,CAAAK,EAAA,CAAAC,qBAAA,GAAAjC,EAAA,CAAA2B,iBAAA,CAAAO,EAAA,CAAAC,WAAA;AAAA;AAAd/B,cAAc,C;QAAdA,cAAc;EAAAgC,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,wBAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCX3B1C,EAAA,CAAAC,cAAA,SAAI;MAAAD,EAAA,CAAAE,MAAA,mBAAY;MAAAF,EAAA,CAAAG,YAAA,EAAK;MAErBH,EAAA,CAAA4C,UAAA,IAAAC,6BAAA,iBAEM;MAEN7C,EAAA,CAAAC,cAAA,wBAAsG;MAArBD,EAAA,CAAA8C,UAAA,gBAAAC,qDAAA;QAAA,OAAMJ,GAAA,CAAAtB,WAAA,EAAa;MAAA,EAAC;MACnGrB,EAAA,CAAAgD,SAAA,yBAAiL;MAEnLhD,EAAA,CAAAG,YAAA,EAAiB;;;MAPXH,EAAA,CAAAiD,SAAA,GAAY;MAAZjD,EAAA,CAAAkD,UAAA,SAAAP,GAAA,CAAAjC,MAAA,CAAY;MAIFV,EAAA,CAAAiD,SAAA,GAAsB;MAAtBjD,EAAA,CAAAkD,UAAA,cAAAP,GAAA,CAAA1B,QAAA,CAAsB;MACgDjB,EAAA,CAAAiD,SAAA,GAA4B;MAA5BjD,EAAA,CAAAkD,UAAA,gBAAAP,GAAA,CAAA9B,YAAA,CAA4B;MACjBb,EAAA,CAAAiD,SAAA,GAA4B;MAA5BjD,EAAA,CAAAkD,UAAA,gBAAAP,GAAA,CAAA3B,YAAA,CAA4B;;;;;;SDGhHZ,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}